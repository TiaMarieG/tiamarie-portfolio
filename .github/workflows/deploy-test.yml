name: Test and Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    env:
      TESTING: true
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Setup Python Virtual Environment
        run: python -m venv python3-virtualenv

      - name: Install Dependencies
        run: python3-virtualenv/bin/pip install -r requirements.txt

      - name: Make run_test.sh executable
        run: chmod +x run_test.sh

      - name: Run Tests
        run: ./run_test.sh

  deploy:
    name: Deploy to VPS
    runs-on: ubuntu-latest
    needs: test
    if: success()
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/deploy-key.pem
          chmod 600 ~/.ssh/deploy-key.pem
          cat >> ~/.ssh/config <<END
          Host my-vps
            HostName $SSH_IP
            User $SSH_USER
            IdentityFile ~/.ssh/deploy-key.pem
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_IP: ${{ secrets.SSH_IP }}

      - name: Deploy Site
        run: ssh my-vps '~/redeploy-site.sh'

      - name: Discord Success Notification
        run: |
          curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" \
            -d "content=ðŸš€ Deployment Successful"
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}

  discord-fail:
    name: Notify on Failure
    runs-on: ubuntu-latest
    needs: [test, deploy]
    if: failure()
    steps:
      - name: Discord Failure Notification
        run: |
          curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" \
            -d "content=ðŸš¨ Deployment Failed"
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
